-- Location Table
INSERT INTO LOCATION (
    PINCODE,
    CITY,
    STATE
) VALUES (
    560001,
    'Bangalore',
    'Karnataka'
);

INSERT INTO LOCATION (
    PINCODE,
    CITY,
    STATE
) VALUES (
    110001,
    'Delhi',
    'Delhi'
);

INSERT INTO LOCATION (
    PINCODE,
    CITY,
    STATE
) VALUES (
    400001,
    'Mumbai',
    'Maharashtra'
);

-- Owner Table
INSERT INTO OWNER (
    NAME,
    PASSWORD
) VALUES (
    'John Doe',
    'password123'
);

INSERT INTO OWNER (
    NAME,
    PASSWORD
) VALUES (
    'Jane Doe',
    'password456'
);

INSERT INTO OWNER (
    NAME,
    PASSWORD
) VALUES (
    'Sam Smith',
    'password789'
);

-- Restaurant Table
INSERT INTO RESTAURANT (
    REST_ID,
    OWNER_ID,
    PINCODE,
    NAME,
    ADDRESS,
    OPENINGHOURS
) VALUES (
    1,
    1,
    560001,
    'John Diner',
    'MG Road, Bangalore',
    '9AM-10PM'
);

INSERT INTO RESTAURANT (
    REST_ID,
    OWNER_ID,
    PINCODE,
    NAME,
    ADDRESS,
    OPENINGHOURS
) VALUES (
    2,
    2,
    110001,
    'Jane Cafe',
    'Connaught Place, Delhi',
    '8AM-9PM'
);

INSERT INTO RESTAURANT (
    REST_ID,
    OWNER_ID,
    PINCODE,
    NAME,
    ADDRESS,
    OPENINGHOURS
) VALUES (
    3,
    3,
    400001,
    'Sam Bistro',
    'Colaba, Mumbai',
    '10AM-11PM'
);

-- OwnerPhone Table
INSERT INTO OWNERPHONE (
    OWNER_ID,
    PHONE
) VALUES (
    1,
    9876543210
);

INSERT INTO OWNERPHONE (
    OWNER_ID,
    PHONE
) VALUES (
    2,
    9876543211
);

INSERT INTO OWNERPHONE (
    OWNER_ID,
    PHONE
) VALUES (
    3,
    9876543212
);

-- OwnerMail Table
INSERT INTO OWNERMAIL (
    OWNER_ID,
    EMAIL
) VALUES (
    1,
    'john.doe@example.com'
);

INSERT INTO OWNERMAIL (
    OWNER_ID,
    EMAIL
) VALUES (
    2,
    'jane.doe@example.com'
);

INSERT INTO OWNERMAIL (
    OWNER_ID,
    EMAIL
) VALUES (
    3,
    'sam.smith@example.com'
);

-- Client Table
INSERT INTO CLIENT (
    NAME,
    PASSWORD
) VALUES (
    'Alice',
    'password321'
);

INSERT INTO CLIENT (
    NAME,
    PASSWORD
) VALUES (
    'Bob',
    'password654'
);

INSERT INTO CLIENT (
    NAME,
    PASSWORD
) VALUES (
    'Charlie',
    'password987'
);

-- ClientPhone Table
INSERT INTO CLIENTPHONE (
    CLIENT_ID,
    PHONE
) VALUES (
    1,
    9876543213
);

INSERT INTO CLIENTPHONE (
    CLIENT_ID,
    PHONE
) VALUES (
    2,
    9876543214
);

INSERT INTO CLIENTPHONE (
    CLIENT_ID,
    PHONE
) VALUES (
    3,
    9876543215
);

-- ClientMail Table
INSERT INTO CLIENTMAIL (
    CLIENT_ID,
    EMAIL
) VALUES (
    1,
    'alice@example.com'
);

INSERT INTO CLIENTMAIL (
    CLIENT_ID,
    EMAIL
) VALUES (
    2,
    'bob@example.com'
);

INSERT INTO CLIENTMAIL (
    CLIENT_ID,
    EMAIL
) VALUES (
    3,
    'charlie@example.com'
);

-- Tables Table
INSERT INTO TABLES (
    TABLE_ID,
    REST_ID,
    NUMBEROFCHAIRS
) VALUES (
    1,
    1,
    4
);

INSERT INTO TABLES (
    TABLE_ID,
    REST_ID,
    NUMBEROFCHAIRS
) VALUES (
    2,
    2,
    6
);

INSERT INTO TABLES (
    TABLE_ID,
    REST_ID,
    NUMBEROFCHAIRS
) VALUES (
    3,
    3,
    8
);

-- Food Table
INSERT INTO FOOD (
    FOOD_ID,
    REST_ID,
    NAME,
    DESCRIPTION
) VALUES (
    1,
    1,
    'Pizza',
    'Delicious cheese pizza'
);

INSERT INTO FOOD (
    FOOD_ID,
    REST_ID,
    NAME,
    DESCRIPTION
) VALUES (
    2,
    2,
    'Burger',
    'Juicy beef burger'
);

INSERT INTO FOOD (
    FOOD_ID,
    REST_ID,
    NAME,
    DESCRIPTION
) VALUES (
    3,
    3,
    'Pasta',
    'Creamy alfredo pasta'
);

-- Category Table
INSERT INTO CATEGORY (
    FOOD_ID,
    CATEGORY
) VALUES (
    1,
    'Italian'
);

INSERT INTO CATEGORY (
    FOOD_ID,
    CATEGORY
) VALUES (
    2,
    'American'
);

INSERT INTO CATEGORY (
    FOOD_ID,
    CATEGORY
) VALUES (
    3,
    'Italian'
);

-- FoodDesc Table
INSERT INTO FOODDESC (
    FOOD_ID,
    PRICE,
    QUANTITY,
    PREPARATIONTIME
) VALUES (
    1,
    200,
    10,
    30
);

INSERT INTO FOODDESC (
    FOOD_ID,
    PRICE,
    QUANTITY,
    PREPARATIONTIME
) VALUES (
    2,
    150,
    20,
    20
);

INSERT INTO FOODDESC (
    FOOD_ID,
    PRICE,
    QUANTITY,
    PREPARATIONTIME
) VALUES (
    3,
    250,
    15,
    40
);

-- Rating Table
INSERT INTO RATING (
    RATING_ID,
    REST_ID,
    CLIENT_ID,
    RATING
) VALUES (
    1,
    1,
    1,
    5
);

INSERT INTO RATING (
    RATING_ID,
    REST_ID,
    CLIENT_ID,
    RATING
) VALUES (
    2,
    2,
    2,
    4
);

INSERT INTO RATING (
    RATING_ID,
    REST_ID,
    CLIENT_ID,
    RATING
) VALUES (
    3,
    3,
    3,
    3
);

-- Orders Table
INSERT INTO ORDERS (
    ORDER_ID,
    REST_ID,
    CLIENT_ID,
    FOOD_ID,
    ORDERTIME,
    QUANTITY
) VALUES (
    1,
    1,
    1,
    1,
    CURRENT_TIMESTAMP,
    2
);

INSERT INTO ORDERS (
    ORDER_ID,
    REST_ID,
    CLIENT_ID,
    FOOD_ID,
    ORDERTIME,
    QUANTITY
) VALUES (
    2,
    2,
    2,
    2,
    CURRENT_TIMESTAMP,
    1
);

INSERT INTO ORDERS (
    ORDER_ID,
    REST_ID,
    CLIENT_ID,
    FOOD_ID,
    ORDERTIME,
    QUANTITY
) VALUES (
    3,
    3,
    3,
    3,
    CURRENT_TIMESTAMP,
    3
);

DELETE FROM ORDERS;

DELETE FROM FOODDESC;

DELETE FROM CATEGORY;

DELETE FROM FOOD;

DELETE FROM TABLES;

DELETE FROM RATING;

DELETE FROM CLIENTMAIL;

DELETE FROM CLIENTPHONE;

DELETE FROM CLIENT;

DELETE FROM OWNERMAIL;

DELETE FROM OWNERPHONE;

DELETE FROM OWNER;

DELETE FROM RESTAURANT;

DELETE FROM LOCATION;

DROP TABLE ORDERS;

DROP TABLE FOODDESC;

DROP TABLE CATEGORY;

DROP TABLE FOOD;

DROP TABLE TABLES;

DROP TABLE RATING;

DROP TABLE CLIENTMAIL;

DROP TABLE CLIENTPHONE;

DROP TABLE CLIENT;

DROP TABLE OWNERMAIL;

DROP TABLE OWNERPHONE;

DROP TABLE OWNER;

DROP TABLE RESTAURANT;

DROP TABLE LOCATION;

CREATE TABLE LOCATION (
    PINCODE NUMBER(6, 0) PRIMARY KEY,
    CITY VARCHAR2(100) NOT NULL,
    STATE VARCHAR2(100) NOT NULL
);

CREATE TABLE OWNER (
    OWNER_ID NUMBER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1 PRIMARY KEY,
    NAME VARCHAR2(100) NOT NULL,
    PASSWORD VARCHAR2(100) NOT NULL
);

CREATE TABLE RESTAURANT (
    REST_ID NUMBER PRIMARY KEY,
    OWNER_ID NUMBER NOT NULL,
    PINCODE NUMBER(6, 0) NOT NULL,
    NAME VARCHAR2(100) NOT NULL,
    ADDRESS VARCHAR2(255) NOT NULL,
    OPENINGHOURS VARCHAR2(50),
    FOREIGN KEY (OWNER_ID) REFERENCES OWNER(OWNER_ID),
    FOREIGN KEY (PINCODE) REFERENCES LOCATION(PINCODE)
);

CREATE TABLE OWNERPHONE(
    OWNER_ID NUMBER NOT NULL,
    PHONE NUMBER(10, 0) NOT NULL,
    FOREIGN KEY (OWNER_ID) REFERENCES OWNER(OWNER_ID)
);

CREATE TABLE OWNERMAIL(
    OWNER_ID NUMBER NOT NULL,
    EMAIL VARCHAR2(255) NOT NULL,
    FOREIGN KEY (OWNER_ID) REFERENCES OWNER(OWNER_ID),
    CONSTRAINT EMAIL_CHECK CHECK (EMAIL LIKE '_%@_%._%' AND EMAIL NOT LIKE '% %')
);

CREATE TABLE CLIENT (
    CLIENT_ID NUMBER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1 PRIMARY KEY,
    NAME VARCHAR2(100) NOT NULL,
    PASSWORD VARCHAR2(100) NOT NULL
);

CREATE TABLE CLIENTPHONE(
    CLIENT_ID NUMBER NOT NULL,
    PHONE NUMBER(10, 0) NOT NULL,
    FOREIGN KEY (CLIENT_ID) REFERENCES CLIENT(CLIENT_ID)
);

CREATE TABLE CLIENTMAIL(
    CLIENT_ID NUMBER NOT NULL,
    EMAIL VARCHAR2(255) NOT NULL,
    FOREIGN KEY (CLIENT_ID) REFERENCES CLIENT(CLIENT_ID),
    CONSTRAINT EMAIL_CHECK_CLIENT CHECK (EMAIL LIKE '_%@_%._%' AND EMAIL NOT LIKE '% %')
);

CREATE TABLE TABLES (
    TABLE_ID NUMBER PRIMARY KEY,
    REST_ID NUMBER NOT NULL,
    NUMBEROFCHAIRS NUMBER,
    FOREIGN KEY (REST_ID) REFERENCES RESTAURANT(REST_ID)
);

CREATE TABLE FOOD (
    FOOD_ID NUMBER PRIMARY KEY,
    REST_ID NUMBER NOT NULL,
    NAME VARCHAR2(100),
    DESCRIPTION VARCHAR2(255),
    FOREIGN KEY (REST_ID) REFERENCES RESTAURANT(REST_ID)
);

CREATE TABLE CATEGORY (
    FOOD_ID NUMBER NOT NULL,
    CATEGORY VARCHAR2(100),
    FOREIGN KEY (FOOD_ID) REFERENCES FOOD(FOOD_ID)
);

CREATE TABLE FOODDESC (
    FOOD_ID NUMBER NOT NULL,
    PRICE NUMBER NOT NULL,
    QUANTITY NUMBER,
    PREPARATIONTIME NUMBER,
    FOREIGN KEY (FOOD_ID) REFERENCES FOOD(FOOD_ID)
);

CREATE TABLE RATING (
    RATING_ID NUMBER PRIMARY KEY,
    REST_ID NUMBER NOT NULL,
    CLIENT_ID NUMBER NOT NULL,
    RATING NUMBER NOT NULL,
    CONSTRAINT CHECK_RATING CHECK (RATING>0 AND RATING<6),
    FOREIGN KEY (REST_ID) REFERENCES RESTAURANT(REST_ID),
    FOREIGN KEY (CLIENT_ID) REFERENCES CLIENT(CLIENT_ID)
);

CREATE TABLE ORDERS (
    ORDER_ID NUMBER PRIMARY KEY,
    REST_ID NUMBER NOT NULL,
    CLIENT_ID NUMBER NOT NULL,
    FOOD_ID NUMBER NOT NULL,
    ORDERTIME TIMESTAMP NOT NULL,
    QUANTITY NUMBER,
    FOREIGN KEY (REST_ID) REFERENCES RESTAURANT(REST_ID),
    FOREIGN KEY (CLIENT_ID) REFERENCES CLIENT(CLIENT_ID),
    FOREIGN KEY (FOOD_ID) REFERENCES FOOD(FOOD_ID)
);